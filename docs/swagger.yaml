openapi: 3.0.3
info:
  title: Laravel API Starter
  version: 1.0.0
  description: |
    OpenAPI specification for the Laravel API starter endpoints.
    Includes authentication and profile routes.
servers:
  - url: http://localhost:8000/api
paths:
  /:
    get:
      summary: API Root
      tags: [Test]
      responses:
        '200':
          description: API root response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  success:
                    type: boolean
                  data:
                    nullable: true
                  errors:
                    nullable: true
                example:
                  success: true
                  message: Hello, Laravel API!
                  data: null
                  errors: null
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, password]
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: password123
      responses:
        '200':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      user:
                        type: object
                        properties:
                          id:
                            type: integer
                          name:
                            type: string
                          email:
                            type: string
                      token:
                        type: string
                  errors:
                    type: string
                example:
                  success: true
                  message: User registered successfully
                  data:
                    user:
                      id: 1
                      name: John Doe
                      email: john@example.com
                    token: "<token>"
                  errors: null
  /auth/login:
    post:
      summary: Login a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password, device_name]
              properties:
                email:
                  type: string
                  format: email
                  example: john@example.com
                password:
                  type: string
                  format: password
                  example: password123
                device_name:
                  type: string
                  example: postman
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: string
                  errors:
                    type: string
                example:
                  success: true
                  message: Login successful
                  data: "<token>"
                  errors: null
  /profile/:
    get:
      summary: Get user profile
      tags: [Profile]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Profile fetched successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                  errors:
                    type: string
                example:
                  success: true
                  message: Profile fetched successfully
                  data:
                    name: John Doe
                    email: john@example.com
                  errors: null
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
